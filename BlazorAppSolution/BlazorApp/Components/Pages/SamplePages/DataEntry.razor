@page "/dataentry"
@rendermode InteractiveServer
<PageTitle>Data Entry</PageTitle>

<!-- this namespace is needed because we are using classes from the OOPsReview namespace-->
@using OOPsReview;

<h1>Data Entry</h1>
<h4>Employment data collection to a csv file</h4>

@*
    we wish to add a blockquote but center the control on the page
    to do so, we will use bootstrap formatting with rows/columns
*@

<div class="row">
    <div class="offset-1 col-md-10">
        <blockquote style="background-color:gainsboro;">
            <p>
                This component will demonstrate how your page can handle validation of data input,
                showing validation messages when you have a number of controls for data entry. This
                component will validate the local controls and create any validation messages for
                invalid data. The messages can be collected using various techniques such as: List or
                Dictionary.
            </p>
            <p>
                This page will input data for an instance of the Employment class. This demo will
                use the Employment class from the OOPs review. The SupervisoryLevel enum
                class will also be brought into this project. One could have included the entire
                class library as part of this solution instead of bringing in individual classes.
            </p>
        </blockquote>
    </div>
</div>

@*
    feedback area
        success messages
        error messages
*@

<!--
Success area
check if there is a feedback message, if so display it

also could use: if(feedBackMsg.Length > 0)
-->
@if (!string.IsNullOrWhiteSpace(feedBackMsg))
{
    <div class="alert alert-success text-center">
        <p>@feedBackMsg</p>
    </div>
}

<!--
Error Message area
check if there are any error messages, if so display them
-->

@code {
    private string feedBackMsg = "sample success message";
}
